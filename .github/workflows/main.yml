name: Perpetual VDS with tmate (Telegram-safe)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [restart-vds]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 355
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore Data from Backup
        run: |
          set -euo pipefail
          if [ -f "vds_backup.zip" ]; then
            echo "Backup file found. Restoring..."
            unzip -o vds_backup.zip -d ./
          else
            echo "No backup found. Starting fresh."
          fi

      - name: Setup and Run tmate
        id: tmate_session
        run: |
          set -euo pipefail
          sudo apt-get update && sudo apt-get install -y tmate jq
          # Запускаем tmate в фоне
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          # Получаем SSH-строку и web URL (если нужно)
          TMATE_SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          TMATE_WEB=$(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')
          # Mask sensitive output in GitHub logs
          echo "::add-mask::${TMATE_SSH}"
          echo "::add-mask::${TMATE_WEB}"
          echo "TMATE_SSH_URL=${TMATE_SSH}" >> $GITHUB_OUTPUT
          echo "TMATE_WEB_URL=${TMATE_WEB}" >> $GITHUB_OUTPUT

      - name: Save SSH Link to File (local only)
        run: |
          set -euo pipefail
          echo "${{ steps.tmate_session.outputs.TMATE_SSH_URL }}" > ssh_link.txt
          echo "${{ steps.tmate_session.outputs.TMATE_WEB_URL }}" >> ssh_link.txt

      - name: Notify via Telegram (send SSH link)
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TMATE_SSH: ${{ steps.tmate_session.outputs.TMATE_SSH_URL }}
          TMATE_WEB: ${{ steps.tmate_session.outputs.TMATE_WEB_URL }}
        run: |
          set -euo pipefail
          if [ -z "${TMATE_SSH}" ] && [ -z "${TMATE_WEB}" ]; then
            echo "No tmate link available, skipping Telegram notify."
            exit 0
          fi
          TEXT="TMATE SSH: ${TMATE_SSH}%0AWeb: ${TMATE_WEB}%0A(Этот секрет замаскирован в логах.)"
          TELE_URL="https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage"
          # Отправляем сообщение (URL-encoded)
          curl -s -X POST "${TELE_URL}" -d chat_id="${TELEGRAM_CHAT_ID}" -d parse_mode="HTML" -d text="${TEXT}" | jq -e '.ok' >/dev/null

      - name: Keep VDS Alive
        run: |
          set -euo pipefail
          echo "VDS is running. Will shut down and backup in approximately 5 hours 45 minutes."
          sleep 20700

      - name: Create Backup
        run: |
          set -euo pipefail
          echo "Creating data backup..."
          zip -r vds_backup.zip . -x ".git/*" "vds_backup.zip" "ssh_link.txt"

      - name: Upload Backup Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vds-backup
          path: vds_backup.zip

      - name: Trigger Next VDS Run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          echo "Triggering VDS restart..."
          curl -s -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{"event_type": "restart-vds"}'
