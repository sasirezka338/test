name: Task

on:
  workflow_dispatch:
  repository_dispatch:
    types: [start]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 150

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

# Шаг 2: Восстанавливаем данные из бэкапа, если он существует
      - name: Restore
        run: |
          if [ -f "test.zip" ]; then
            echo "file found. Restoring..."
            # Распаковываем архив с заменой существующих файлов
            unzip -o test.zip -d ./
          else
            echo "No backup found. Starting fresh."
          fi

      - name: Setup and Run tmate (ephemeral)
        id: tmate_session
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y tmate jq
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          TMATE_SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          TMATE_WEB=$(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')
          echo "::add-mask::${TMATE_SSH}"
          echo "::add-mask::${TMATE_WEB}"
          echo "TMATE_SSH_URL=${TMATE_SSH}" >> $GITHUB_OUTPUT
          echo "TMATE_WEB_URL=${TMATE_WEB}" >> $GITHUB_OUTPUT

      - name: Save SSH Link to File (local only)
        run: |
          set -euo pipefail
          echo "${{ steps.tmate_session.outputs.TMATE_SSH_URL }}" > ssh_link.txt
          echo "${{ steps.tmate_session.outputs.TMATE_WEB_URL }}" >> ssh_link.txt
          chmod 600 ssh_link.txt
      
      - name: Notify via Telegram (send SSH link) and short window
        env:
          TMATE_SSH: ${{ steps.tmate_session.outputs.TMATE_SSH_URL }}
          TMATE_WEB: ${{ steps.tmate_session.outputs.TMATE_WEB_URL }}
        run: |
          set -euo pipefail
          if [ -z "${TMATE_SSH}" ] && [ -z "${TMATE_WEB}" ]; then
            echo "No tmate link available, skipping Telegram notify."
          else
            TEXT="TMATE SSH: ${TMATE_SSH}%0AWeb: ${TMATE_WEB}%0A(Ссылка замаскирована в логах.)"
          fi
          echo "Ephemeral tmate window: 10 minutes"
          sleep 500
          # После окна убиваем только tmate-сервер (не фоновые процессы)
          tmate -S /tmp/tmate.sock kill-server || true
          

      - name: Start test.sh in background (supervised)
        continue-on-error: true
        timeout-minutes: 100
        run: |
          set -euo pipefail
          sudo sh test.sh



      - name: Trigger Next Run
        run: |
          echo "Triggering VDS restart..."
          # Отправляем запрос к API GitHub, чтобы запустить этот же воркфлоу снова
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{"event_type": "start"}'
